{
 "Description": "Coach portal backend services - coach-only functionality (dev)",
 "Resources": {
  "CoachPortalServiceCoachSharedLayerF7B3A3F5": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "4ab9b8f4b609652208864351c4003563b8d8954ebb51f21735378cb22b1f6ab0.zip"
    },
    "Description": "Shared models and utilities for coach portal functionality - dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachSharedLayer/Resource",
    "aws:asset:path": "asset.4ab9b8f4b609652208864351c4003563b8d8954ebb51f21735378cb22b1f6ab0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "CoachPortalServiceCoachOnboardingSessions6830881A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "session_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "session_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "coach-onboarding-sessions-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "expires_at",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachOnboardingSessions/Resource"
   }
  },
  "CoachPortalServiceBackgroundChecksTable32E50EC1": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "check_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "coach_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "coach-id-index",
      "KeySchema": [
       {
        "AttributeName": "coach_id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "check_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "background-checks-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/BackgroundChecksTable/Resource"
   }
  },
  "CoachPortalServiceLegalRequirementsTableC067275B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "coach_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "requirement_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "coach_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "requirement_id",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "legal-requirements-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/LegalRequirementsTable/Resource"
   }
  },
  "CoachPortalServiceEventbriteConfigTable4072FBDC": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "coach_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "coach_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "eventbrite-config-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventbriteConfigTable/Resource"
   }
  },
  "CoachPortalServiceEventAttendeesTable7A5653ED": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "attendee_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "event_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "event-attendees-index",
      "KeySchema": [
       {
        "AttributeName": "event_id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "attendee_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "event-attendees-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventAttendeesTable/Resource"
   }
  },
  "CoachPortalServiceOnboardingHandlerServiceRoleC1E8AEC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/OnboardingHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceOnboardingHandlerServiceRoleDefaultPolicy7F7287D2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
       }
      },
      {
       "Action": [
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUpdateUserGroups",
        "cognito-idp:AdminUserGlobalSignOut"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:cognito-idp:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::ImportValue": "dev-TSAUserPoolId"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceOnboardingHandlerServiceRoleDefaultPolicy7F7287D2",
    "Roles": [
     {
      "Ref": "CoachPortalServiceOnboardingHandlerServiceRoleC1E8AEC2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/OnboardingHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceOnboardingHandler7253CD76": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "3f7bf3dd497f6547b7216da8789b5912cdf928ef69be075566164ccc81beee3b.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-onboard-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandlerServiceRoleC1E8AEC2",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceOnboardingHandlerServiceRoleDefaultPolicy7F7287D2",
    "CoachPortalServiceOnboardingHandlerServiceRoleC1E8AEC2"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/OnboardingHandler/Resource",
    "aws:asset:path": "asset.3f7bf3dd497f6547b7216da8789b5912cdf928ef69be075566164ccc81beee3b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceOnboardingHandlerOnboardingAPIGatewayInvokeBC7F2337": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/OnboardingHandler/OnboardingAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceProfileHandlerServiceRoleA48639C6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/ProfileHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceProfileHandlerServiceRoleDefaultPolicy87053CE4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
       }
      },
      {
       "Action": [
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUpdateUserGroups",
        "cognito-idp:AdminUserGlobalSignOut"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:cognito-idp:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::ImportValue": "dev-TSAUserPoolId"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceProfileHandlerServiceRoleDefaultPolicy87053CE4",
    "Roles": [
     {
      "Ref": "CoachPortalServiceProfileHandlerServiceRoleA48639C6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/ProfileHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceProfileHandlerD7978A31": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "b3316b713fe44936919f3963eb7bd8f674917be33722cf892520f66c5ec38326.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-profile-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerServiceRoleA48639C6",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceProfileHandlerServiceRoleDefaultPolicy87053CE4",
    "CoachPortalServiceProfileHandlerServiceRoleA48639C6"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/ProfileHandler/Resource",
    "aws:asset:path": "asset.b3316b713fe44936919f3963eb7bd8f674917be33722cf892520f66c5ec38326",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceProfileHandlerProfileAPIGatewayInvoke67D12A89": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/ProfileHandler/ProfileAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceEventsHandlerServiceRole6F7C4B02": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventsHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceEventsHandlerServiceRoleDefaultPolicy517F532D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
        {
         "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUpdateUserGroups",
        "cognito-idp:AdminUserGlobalSignOut"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:cognito-idp:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::ImportValue": "dev-TSAUserPoolId"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceEventsHandlerServiceRoleDefaultPolicy517F532D",
    "Roles": [
     {
      "Ref": "CoachPortalServiceEventsHandlerServiceRole6F7C4B02"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventsHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceEventsHandler319A3FCA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "b273c062932c542ce738e9222dfb947bf6a7849beb3657f64682f50b476bbe14.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-events-dev",
    "Handler": "events_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandlerServiceRole6F7C4B02",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceEventsHandlerServiceRoleDefaultPolicy517F532D",
    "CoachPortalServiceEventsHandlerServiceRole6F7C4B02"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventsHandler/Resource",
    "aws:asset:path": "asset.b273c062932c542ce738e9222dfb947bf6a7849beb3657f64682f50b476bbe14",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceEventsHandlerEventsAPIGatewayInvoke92D93F5A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventsHandler/EventsAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceBackgroundHandlerServiceRoleE92BA47B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/BackgroundHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceBackgroundHandlerServiceRoleDefaultPolicyD0B3F416": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
       }
      },
      {
       "Action": [
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUpdateUserGroups",
        "cognito-idp:AdminUserGlobalSignOut"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:cognito-idp:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::ImportValue": "dev-TSAUserPoolId"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceBackgroundHandlerServiceRoleDefaultPolicyD0B3F416",
    "Roles": [
     {
      "Ref": "CoachPortalServiceBackgroundHandlerServiceRoleE92BA47B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/BackgroundHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceBackgroundHandler3C861FB0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "9f2a7bcef140ea1c0941d8190687d09b83a36c48da2ca9125dae0056ef0d7d11.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-background-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandlerServiceRoleE92BA47B",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceBackgroundHandlerServiceRoleDefaultPolicyD0B3F416",
    "CoachPortalServiceBackgroundHandlerServiceRoleE92BA47B"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/BackgroundHandler/Resource",
    "aws:asset:path": "asset.9f2a7bcef140ea1c0941d8190687d09b83a36c48da2ca9125dae0056ef0d7d11",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceBackgroundHandlerBackgroundAPIGatewayInvoke134CDF7E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandler3C861FB0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/BackgroundHandler/BackgroundAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceEventbriteOAuthHandlerServiceRole0BAD4DA3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventbriteOAuthHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceEventbriteOAuthHandlerServiceRoleDefaultPolicy42F47352": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
        {
         "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceEventbriteOAuthHandlerServiceRoleDefaultPolicy42F47352",
    "Roles": [
     {
      "Ref": "CoachPortalServiceEventbriteOAuthHandlerServiceRole0BAD4DA3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventbriteOAuthHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceEventbriteOAuthHandler8D19F1BD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "9edf936eab4099c24ff73c53e0ffb5763c273de09044fc06d8b109b96c6d0633.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-eventbrite-oauth-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandlerServiceRole0BAD4DA3",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceEventbriteOAuthHandlerServiceRoleDefaultPolicy42F47352",
    "CoachPortalServiceEventbriteOAuthHandlerServiceRole0BAD4DA3"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventbriteOAuthHandler/Resource",
    "aws:asset:path": "asset.9edf936eab4099c24ff73c53e0ffb5763c273de09044fc06d8b109b96c6d0633",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceEventbriteOAuthHandlerEventbriteOAuthAPIGatewayInvokeF5BBBC3F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/EventbriteOAuthHandler/EventbriteOAuthAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceInvitationsHandlerServiceRole34A89C04": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/InvitationsHandler/ServiceRole/Resource"
   }
  },
  "CoachPortalServiceInvitationsHandlerServiceRoleDefaultPolicy95A467C5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundChecksTable32E50EC1",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceCoachOnboardingSessions6830881A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventAttendeesTable7A5653ED",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteConfigTable4072FBDC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "CoachPortalServiceLegalRequirementsTableC067275B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceBackgroundChecksTable32E50EC1",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CoachPortalServiceEventAttendeesTable7A5653ED",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CoachPortalServiceInvitationsHandlerServiceRoleDefaultPolicy95A467C5",
    "Roles": [
     {
      "Ref": "CoachPortalServiceInvitationsHandlerServiceRole34A89C04"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/InvitationsHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CoachPortalServiceInvitationsHandlerC94477E8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "5c0f0f42c87eda099389250bfd74c30621e197ae57fc34bedf74472b21dfd676.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformUsersTable-dev"
      },
      "PROFILES_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
      },
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "ENROLLMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEnrollmentsTable-dev"
      },
      "EVENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
      },
      "DOCUMENTS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformDocumentsTable-dev"
      },
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "ONBOARDING_SESSIONS_TABLE": {
       "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
      },
      "BACKGROUND_CHECKS_TABLE": {
       "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
      },
      "LEGAL_REQUIREMENTS_TABLE": {
       "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
      },
      "EVENTBRITE_CONFIG_TABLE": {
       "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
      },
      "EVENT_ATTENDEES_TABLE": {
       "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
      },
      "EVENT_INVITATIONS_TABLE": {
       "Fn::ImportValue": "UnifiedPlatformInvitationsTable-dev"
      },
      "EVENTBRITE_SECRET_ARN": "arn:aws:secretsmanager:us-east-2:164722634547:secret:eventbrite-api-credentials-aDZtV9",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "AUTH_USER_POOL_ID": {
       "Fn::ImportValue": "dev-TSAUserPoolId"
      },
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-coach-invitations-dev",
    "Handler": "invitations_handler.lambda_handler",
    "Layers": [
     {
      "Ref": "CoachPortalServiceCoachSharedLayerF7B3A3F5"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerServiceRole34A89C04",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceInvitationsHandlerServiceRoleDefaultPolicy95A467C5",
    "CoachPortalServiceInvitationsHandlerServiceRole34A89C04"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/InvitationsHandler/Resource",
    "aws:asset:path": "asset.5c0f0f42c87eda099389250bfd74c30621e197ae57fc34bedf74472b21dfd676",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CoachPortalServiceInvitationsHandlerInvitationsAPIGatewayInvoke7C5D9578": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/InvitationsHandler/InvitationsAPIGatewayInvoke"
   }
  },
  "CoachPortalServiceCoachAPILogGroup95289784": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/apigateway/tsa-coach-api-dev",
    "RetentionInDays": 30,
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachAPILogGroup/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPI18AC9903": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "TSA Coach Portal API - dev",
    "Name": "TSA Coach API - dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPICloudWatchRole1508017C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/CloudWatchRole/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIAccount90797C82": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPICloudWatchRole1508017C",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "CoachPortalServiceCoachPortalAPI18AC9903"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Account"
   }
  },
  "CoachPortalServiceCoachPortalAPIDeployment5177D53Aab1a703076c240c871757d987fee4e68": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "TSA Coach Portal API - dev",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "DependsOn": [
    "CoachPortalServiceCoachPortalAPIbackgroundcheckGET60FC872F",
    "CoachPortalServiceCoachPortalAPIbackgroundcheckOPTIONS0F0E1A60",
    "CoachPortalServiceCoachPortalAPIbackgroundcheckPOST02EE29A5",
    "CoachPortalServiceCoachPortalAPIbackgroundcheck811D18E1",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeGETFC3B99FA",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeOPTIONSC5E64599",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeB0134C06",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackGET7F64E059",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackOPTIONS14BA64E6",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthcallback39D753C4",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectOPTIONS18085AF3",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectPOST07391077",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnect94ABB92B",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthOPTIONS1A121AB3",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshOPTIONS26C2EAE0",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshPOST0DD92F38",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthrefresh01A457C3",
    "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusGET9F9F02CF",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusOPTIONSF4910F4D",
    "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusBE7B6338",
    "CoachPortalServiceCoachPortalAPIeventbriteOPTIONS6AD62EA1",
    "CoachPortalServiceCoachPortalAPIeventbriteE181533A",
    "CoachPortalServiceCoachPortalAPIeventsidattendeesGET171903D2",
    "CoachPortalServiceCoachPortalAPIeventsidattendeesOPTIONSFE2CEB75",
    "CoachPortalServiceCoachPortalAPIeventsidattendees6EB3418A",
    "CoachPortalServiceCoachPortalAPIeventsidDELETE374176F1",
    "CoachPortalServiceCoachPortalAPIeventsidGETB3519CC6",
    "CoachPortalServiceCoachPortalAPIeventsidOPTIONS879DFA40",
    "CoachPortalServiceCoachPortalAPIeventsidpublishOPTIONSDB8C30E8",
    "CoachPortalServiceCoachPortalAPIeventsidpublishPOST53E521AB",
    "CoachPortalServiceCoachPortalAPIeventsidpublish9C72FE17",
    "CoachPortalServiceCoachPortalAPIeventsidPUT16EF22E6",
    "CoachPortalServiceCoachPortalAPIeventsid62CB789D",
    "CoachPortalServiceCoachPortalAPIeventsidsyncGETB29D2250",
    "CoachPortalServiceCoachPortalAPIeventsidsyncOPTIONSAF3660E1",
    "CoachPortalServiceCoachPortalAPIeventsidsyncPOST5B615EFD",
    "CoachPortalServiceCoachPortalAPIeventsidsync6AC86AD3",
    "CoachPortalServiceCoachPortalAPIeventsDELETE6AF25924",
    "CoachPortalServiceCoachPortalAPIeventsGET2CE09A4B",
    "CoachPortalServiceCoachPortalAPIeventsOPTIONSBEFDC97C",
    "CoachPortalServiceCoachPortalAPIeventsPOST1A237545",
    "CoachPortalServiceCoachPortalAPIeventsPUTF9582D3E",
    "CoachPortalServiceCoachPortalAPIeventsBB55A16D",
    "CoachPortalServiceCoachPortalAPIGET2515D289",
    "CoachPortalServiceCoachPortalAPIhealthGETC89E557C",
    "CoachPortalServiceCoachPortalAPIhealthOPTIONS06FE1082",
    "CoachPortalServiceCoachPortalAPIhealth52BE275A",
    "CoachPortalServiceCoachPortalAPIonboardingcompleteOPTIONS83169867",
    "CoachPortalServiceCoachPortalAPIonboardingcompletePOST94146448",
    "CoachPortalServiceCoachPortalAPIonboardingcomplete88E502CC",
    "CoachPortalServiceCoachPortalAPIonboardingGET4AAA6442",
    "CoachPortalServiceCoachPortalAPIonboardingOPTIONSE987C480",
    "CoachPortalServiceCoachPortalAPIonboardingPOST7577EA71",
    "CoachPortalServiceCoachPortalAPIonboardingprogressGET632EB8DE",
    "CoachPortalServiceCoachPortalAPIonboardingprogressOPTIONS4FEDA92B",
    "CoachPortalServiceCoachPortalAPIonboardingprogressPOST39AE601D",
    "CoachPortalServiceCoachPortalAPIonboardingprogressPUTC94A5854",
    "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F",
    "CoachPortalServiceCoachPortalAPIonboardingPUT712F7495",
    "CoachPortalServiceCoachPortalAPIonboardingD5192C9D",
    "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationOPTIONS2E32D29B",
    "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationPOSTE36E2F89",
    "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitation09DA77D3",
    "CoachPortalServiceCoachPortalAPIOPTIONS77EA90FA",
    "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidDELETE1E3C12EC",
    "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidGET228E0156",
    "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidOPTIONS44202176",
    "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidPUT3A6050EF",
    "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB",
    "CoachPortalServiceCoachPortalAPIparentinvitationsbulkOPTIONS8C526727",
    "CoachPortalServiceCoachPortalAPIparentinvitationsbulkPOST0A45DC0F",
    "CoachPortalServiceCoachPortalAPIparentinvitationsbulkFC97A731",
    "CoachPortalServiceCoachPortalAPIparentinvitationsGETBBF105F7",
    "CoachPortalServiceCoachPortalAPIparentinvitationsOPTIONS54C5D901",
    "CoachPortalServiceCoachPortalAPIparentinvitationsPOST65E3CEA3",
    "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A",
    "CoachPortalServiceCoachPortalAPIparentinvitationssendOPTIONS7CDC044D",
    "CoachPortalServiceCoachPortalAPIparentinvitationssendPOST1E279397",
    "CoachPortalServiceCoachPortalAPIparentinvitationssend0347A704",
    "CoachPortalServiceCoachPortalAPIprofileGET01AC7933",
    "CoachPortalServiceCoachPortalAPIprofileOPTIONS47CF649B",
    "CoachPortalServiceCoachPortalAPIprofilePATCH56973DF9",
    "CoachPortalServiceCoachPortalAPIprofilepreferencesOPTIONSE8C249AF",
    "CoachPortalServiceCoachPortalAPIprofilepreferencesPATCHD00BAE3B",
    "CoachPortalServiceCoachPortalAPIprofilepreferences437EB566",
    "CoachPortalServiceCoachPortalAPIprofileB74ABE3D"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Deployment/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "CoachPortalServiceCoachAPILogGroup95289784",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIDeployment5177D53Aab1a703076c240c871757d987fee4e68"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    },
    "StageName": "dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Coach"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Coach"
     }
    ]
   },
   "DependsOn": [
    "CoachPortalServiceCoachPortalAPIAccount90797C82"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/DeploymentStage.dev/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIOPTIONS77EA90FA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGET98E41610": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET.."
   }
  },
  "CoachPortalServiceCoachPortalAPIGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGET0912789B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET.."
   }
  },
  "CoachPortalServiceCoachPortalAPIGET2515D289": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{\"httpMethod\": \"$context.httpMethod\", \"path\": \"$context.path\"}"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIhealth52BE275A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/health/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIhealthOPTIONS06FE1082": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIhealth52BE275A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/health/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIhealthGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGEThealthBE796484": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/health/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..health"
   }
  },
  "CoachPortalServiceCoachPortalAPIhealthGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGEThealth4AC10F6B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/health/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..health"
   }
  },
  "CoachPortalServiceCoachPortalAPIhealthGETC89E557C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{\"httpMethod\": \"$context.httpMethod\", \"path\": \"$context.path\"}"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIhealth52BE275A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/health/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofileB74ABE3D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "profile",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofileOPTIONS47CF649B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofileB74ABE3D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofileGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETprofile36B1741C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..profile"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofileGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETprofile1FC79E5D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..profile"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofileGET01AC7933": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceProfileHandlerD7978A31",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofileB74ABE3D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilePATCHApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPATCHprofile2E87306D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PATCH/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/PATCH/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PATCH..profile"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilePATCHApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPATCHprofileEBF281FC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PATCH/profile"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/PATCH/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PATCH..profile"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilePATCH56973DF9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PATCH",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceProfileHandlerD7978A31",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofileB74ABE3D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/PATCH/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilepreferences437EB566": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofileB74ABE3D"
    },
    "PathPart": "preferences",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/preferences/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilepreferencesOPTIONSE8C249AF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofilepreferences437EB566"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/preferences/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilepreferencesPATCHApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPATCHprofilepreferences592860B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PATCH/profile/preferences"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/preferences/PATCH/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PATCH..profile.preferences"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilepreferencesPATCHApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPATCHprofilepreferencesF655F685": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceProfileHandlerD7978A31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PATCH/profile/preferences"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/preferences/PATCH/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PATCH..profile.preferences"
   }
  },
  "CoachPortalServiceCoachPortalAPIprofilepreferencesPATCHD00BAE3B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PATCH",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceProfileHandlerD7978A31",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIprofilepreferences437EB566"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/profile/preferences/PATCH/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingD5192C9D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "onboarding",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingOPTIONSE987C480": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETonboardingC22B6AC4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETonboarding305E34DF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingGET4AAA6442": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingA47948D5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingFBFA61F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPOST7577EA71": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPUTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTonboardingF9996A4A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PUT/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/PUT/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPUTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTonboardingAB165857": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PUT/onboarding"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/PUT/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..onboarding"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingPUT712F7495": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/PUT/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitation09DA77D3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "PathPart": "validate-invitation",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/validate-invitation/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationOPTIONS2E32D29B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitation09DA77D3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/validate-invitation/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingvalidateinvitation4A4C2F7A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/onboarding/validate-invitation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/validate-invitation/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.validate-invitation"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingvalidateinvitation482A749D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/onboarding/validate-invitation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/validate-invitation/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.validate-invitation"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitationPOSTE36E2F89": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingvalidateinvitation09DA77D3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/validate-invitation/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "PathPart": "progress",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressOPTIONS4FEDA92B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETonboardingprogress69550660": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETonboardingprogress9EE32498": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressGET632EB8DE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingprogress3D10F522": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingprogress8AF04DDF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPOST39AE601D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPUTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTonboardingprogress3C606E80": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PUT/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/PUT/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPUTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTonboardingprogressB7A1B421": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PUT/onboarding/progress"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/PUT/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..onboarding.progress"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingprogressPUTC94A5854": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingprogressAF4B1B0F"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/progress/PUT/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingcomplete88E502CC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingD5192C9D"
    },
    "PathPart": "complete",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/complete/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingcompleteOPTIONS83169867": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingcomplete88E502CC"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/complete/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingcompletePOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingcomplete817D7484": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/onboarding/complete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/complete/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.complete"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingcompletePOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTonboardingcomplete2A4F4842": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceOnboardingHandler7253CD76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/onboarding/complete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/complete/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..onboarding.complete"
   }
  },
  "CoachPortalServiceCoachPortalAPIonboardingcompletePOST94146448": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceOnboardingHandler7253CD76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIonboardingcomplete88E502CC"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/onboarding/complete/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsBB55A16D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "events",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsOPTIONSBEFDC97C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETevents30EA13D8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETevents2ADE67BC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsGET2CE09A4B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTevents7CA1DBDA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTevents2435E587": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPOST1A237545": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPUTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTeventsABFA14C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PUT/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/PUT/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPUTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTevents1C2C9ACC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PUT/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/PUT/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsPUTF9582D3E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/PUT/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsDELETEApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEeventsB1376BC6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/DELETE/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/DELETE/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsDELETEApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEevents7D05BD23": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/DELETE/events"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/DELETE/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..events"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsDELETE6AF25924": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/DELETE/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsid62CB789D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsBB55A16D"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidOPTIONS879DFA40": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsid15C2EA6F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsid2A81643C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidGETB3519CC6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidPUTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTeventsidEF0D6B5B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PUT/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/PUT/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidPUTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTeventsid4E587409": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PUT/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/PUT/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidPUT16EF22E6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/PUT/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidDELETEApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEeventsidABCAEA02": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/DELETE/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/DELETE/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidDELETEApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEeventsid2F293643": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/DELETE/events/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/DELETE/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..events.{id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidDELETE374176F1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/DELETE/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidpublish9C72FE17": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "PathPart": "publish",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/publish/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidpublishOPTIONSDB8C30E8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidpublish9C72FE17"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/publish/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidpublishPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventsidpublish219A002C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/events/*/publish"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/publish/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events.{id}.publish"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidpublishPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventsidpublish07BC4044": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/events/*/publish"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/publish/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events.{id}.publish"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidpublishPOST53E521AB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidpublish9C72FE17"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/publish/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidattendees6EB3418A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "PathPart": "attendees",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/attendees/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidattendeesOPTIONSFE2CEB75": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidattendees6EB3418A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/attendees/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidattendeesGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsidattendeesCB52E9AA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/events/*/attendees"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/attendees/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}.attendees"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidattendeesGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsidattendees79790E76": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/events/*/attendees"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/attendees/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}.attendees"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidattendeesGET171903D2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidattendees6EB3418A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/attendees/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsync6AC86AD3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsid62CB789D"
    },
    "PathPart": "sync",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncOPTIONSAF3660E1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidsync6AC86AD3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsidsync048AF73A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/events/*/sync"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}.sync"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventsidsync24CA81DC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/events/*/sync"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..events.{id}.sync"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncGETB29D2250": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidsync6AC86AD3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventsidsync7D6DA572": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/events/*/sync"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events.{id}.sync"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventsidsyncF3614912": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventsHandler319A3FCA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/events/*/sync"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..events.{id}.sync"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventsidsyncPOST5B615EFD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventsHandler319A3FCA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventsidsync6AC86AD3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/events/{id}/sync/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteE181533A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "eventbrite",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteOPTIONS6AD62EA1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteE181533A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteE181533A"
    },
    "PathPart": "oauth",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthOPTIONS1A121AB3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeB0134C06": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "PathPart": "authorize",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/authorize/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeOPTIONSC5E64599": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeB0134C06"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/authorize/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthauthorize4E4BDC9E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/eventbrite/oauth/authorize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/authorize/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.authorize"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthauthorize99F5C599": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/eventbrite/oauth/authorize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/authorize/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.authorize"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeGETFC3B99FA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthauthorizeB0134C06"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/authorize/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthcallback39D753C4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "PathPart": "callback",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/callback/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackOPTIONS14BA64E6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthcallback39D753C4"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/callback/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthcallbackB3C81AFE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/eventbrite/oauth/callback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/callback/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.callback"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthcallbackFB0D1646": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/eventbrite/oauth/callback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/callback/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.callback"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthcallbackGET7F64E059": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthcallback39D753C4"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/callback/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusBE7B6338": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "PathPart": "status",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/status/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusOPTIONSF4910F4D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusBE7B6338"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/status/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthstatus79103696": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/eventbrite/oauth/status"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/status/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.status"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETeventbriteoauthstatus3588B9C8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/eventbrite/oauth/status"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/status/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..eventbrite.oauth.status"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusGET9F9F02CF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthstatusBE7B6338"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/status/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnect94ABB92B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "PathPart": "disconnect",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/disconnect/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectOPTIONS18085AF3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnect94ABB92B"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/disconnect/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventbriteoauthdisconnect59810F0D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/eventbrite/oauth/disconnect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/disconnect/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..eventbrite.oauth.disconnect"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventbriteoauthdisconnect2C91EE7C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/eventbrite/oauth/disconnect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/disconnect/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..eventbrite.oauth.disconnect"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnectPOST07391077": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthdisconnect94ABB92B"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/disconnect/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthrefresh01A457C3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauth923FF5DF"
    },
    "PathPart": "refresh",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/refresh/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshOPTIONS26C2EAE0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthrefresh01A457C3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/refresh/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventbriteoauthrefresh84E4400F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/eventbrite/oauth/refresh"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/refresh/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..eventbrite.oauth.refresh"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTeventbriteoauthrefreshF37621D3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/eventbrite/oauth/refresh"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/refresh/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..eventbrite.oauth.refresh"
   }
  },
  "CoachPortalServiceCoachPortalAPIeventbriteoauthrefreshPOST0DD92F38": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceEventbriteOAuthHandler8D19F1BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIeventbriteoauthrefresh01A457C3"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/eventbrite/oauth/refresh/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheck811D18E1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "background-check",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckOPTIONS0F0E1A60": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIbackgroundcheck811D18E1"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETbackgroundcheck5C703881": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandler3C861FB0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/background-check"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..background-check"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETbackgroundcheckBEC843F8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandler3C861FB0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/background-check"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..background-check"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckGET60FC872F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundHandler3C861FB0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIbackgroundcheck811D18E1"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTbackgroundcheck5270098A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandler3C861FB0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/background-check"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..background-check"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTbackgroundcheck4BD4BE32": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceBackgroundHandler3C861FB0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/background-check"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..background-check"
   }
  },
  "CoachPortalServiceCoachPortalAPIbackgroundcheckPOST02EE29A5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceBackgroundHandler3C861FB0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIbackgroundcheck811D18E1"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/background-check/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoachPortalServiceCoachPortalAPI18AC9903",
      "RootResourceId"
     ]
    },
    "PathPart": "parent-invitations",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsOPTIONS54C5D901": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETparentinvitationsF9AE611E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/parent-invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..parent-invitations"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETparentinvitations17B51787": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/parent-invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..parent-invitations"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsGETBBF105F7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitations71E047CA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/parent-invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitations52E7DAF0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/parent-invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsPOST65E3CEA3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "PathPart": "{invitation_id}",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidOPTIONS44202176": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidGETApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETparentinvitationsinvitationid4E426E7F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/GET/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/GET/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidGETApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAGETparentinvitationsinvitationidB3F0E22E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/GET/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/GET/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.GET..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidGET228E0156": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/GET/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidPUTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTparentinvitationsinvitationid5B2590A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/PUT/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/PUT/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidPUTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPUTparentinvitationsinvitationid2C213C10": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/PUT/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/PUT/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.PUT..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidPUT3A6050EF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/PUT/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidDELETEApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEparentinvitationsinvitationidC9D10FA4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/DELETE/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/DELETE/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidDELETEApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CADELETEparentinvitationsinvitationid55075905": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/DELETE/parent-invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/DELETE/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.DELETE..parent-invitations.{invitation_id}"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationidDELETE1E3C12EC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsinvitationid234ABDEB"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/{invitation_id}/DELETE/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsbulkFC97A731": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "PathPart": "bulk",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/bulk/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsbulkOPTIONS8C526727": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsbulkFC97A731"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/bulk/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsbulkPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitationsbulk2E1795F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/parent-invitations/bulk"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/bulk/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations.bulk"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsbulkPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitationsbulkB64482AB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/parent-invitations/bulk"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/bulk/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations.bulk"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationsbulkPOST0A45DC0F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationsbulkFC97A731"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/bulk/POST/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationssend0347A704": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitations7CA7D69A"
    },
    "PathPart": "send",
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/send/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationssendOPTIONS7CDC044D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationssend0347A704"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/send/OPTIONS/Resource"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationssendPOSTApiPermissiontsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitationssendBDA696E4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/POST/parent-invitations/send"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/send/POST/ApiPermission.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations.send"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationssendPOSTApiPermissionTesttsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CAPOSTparentinvitationssendD634B154": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CoachPortalServiceInvitationsHandlerC94477E8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       "/test-invoke-stage/POST/parent-invitations/send"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/send/POST/ApiPermission.Test.tsacoachbackenddevCoachPortalServiceCoachPortalAPI703617CA.POST..parent-invitations.send"
   }
  },
  "CoachPortalServiceCoachPortalAPIparentinvitationssendPOST1E279397": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CoachPortalServiceInvitationsHandlerC94477E8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoachPortalServiceCoachPortalAPIparentinvitationssend0347A704"
    },
    "RestApiId": {
     "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachPortalAPI/Default/parent-invitations/send/POST/Resource"
   }
  },
  "CoachPortalServiceCoachAPIEndpointParameter60737D77": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Coach Portal API endpoint for dev environment",
    "Name": "/tsa/dev/api-urls/coach",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Coach",
     "Project": "TSA-Unified-Platform",
     "UserType": "Coach"
    },
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "https://",
       {
        "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
       },
       ".execute-api.us-east-2.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
       },
       "/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CoachPortalService/CoachAPIEndpointParameter/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTU/DMAyGf8vuaVi3A+cOBBcQ1UBcJzc1XWiTVPnQFFX577hpJ7aTH3++tnd8t93ycgMXV4i2LwbZ8OnTg+gZhU7TAKppgU9vENF+o3XSaPb0o+/8l6CFXxO3XKNV0s0libn9CZxD73g1G/L5IYge/QEcsjZqUKYl7S9oBpybMyQmQfHpaJZYtrUZpIh5fqbEBtM5WtF0r9aEMa+3cmIwyg48XiDSGHS+GmWe9I+VECZoz55xHExUSEjRG4/e0WX5BajVBCswL/6O/mzaObnSNbuKZKbrnZrfaqXuarCg0KPNF1ydlFj+yyxBRXdjPoIfg0+sjqSgH/a8LPnj5tdJWVhaXCrkx8X+AZlf4/7OAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-coach-backend-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "CoachPortalServiceCoachPortalAPIEndpointD38F4EA7": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
      },
      "/"
     ]
    ]
   }
  },
  "CoachAPIUrlDev": {
   "Description": "Coach Portal API Gateway URL (dev)",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:CoachPortalAPIUrl"
   }
  },
  "CoachPortalServiceCoachPortalAPIIdCAD242A8": {
   "Description": "Coach Portal API Gateway ID (dev)",
   "Value": {
    "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:CoachPortalAPIId"
   }
  },
  "CoachPortalServiceOnboardingSessionsTableOutput0ECD5A82": {
   "Description": "Coach Onboarding Sessions Table (dev)",
   "Value": {
    "Ref": "CoachPortalServiceCoachOnboardingSessions6830881A"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:OnboardingSessionsTable"
   }
  },
  "CoachPortalServiceBackgroundChecksTableOutputC94FD2B2": {
   "Description": "Background Checks Table (dev)",
   "Value": {
    "Ref": "CoachPortalServiceBackgroundChecksTable32E50EC1"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:BackgroundChecksTable"
   }
  },
  "CoachPortalServiceLegalRequirementsTableOutputAEBD5840": {
   "Description": "Legal Requirements Table (dev)",
   "Value": {
    "Ref": "CoachPortalServiceLegalRequirementsTableC067275B"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:LegalRequirementsTable"
   }
  },
  "CoachPortalServiceProfilesTableOutput072D221E": {
   "Description": "Coach Profiles Table (dev)",
   "Value": {
    "Fn::ImportValue": "UnifiedPlatformProfilesTable-dev"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:ProfilesTable"
   }
  },
  "CoachPortalServiceEventsTableOutput97A70FEB": {
   "Description": "Events Table (dev)",
   "Value": {
    "Fn::ImportValue": "UnifiedPlatformEventsTable-dev"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:EventsTable"
   }
  },
  "CoachPortalServiceEventbriteConfigTableOutputC974F5BA": {
   "Description": "Eventbrite Config Table (dev)",
   "Value": {
    "Ref": "CoachPortalServiceEventbriteConfigTable4072FBDC"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:EventbriteConfigTable"
   }
  },
  "CoachPortalServiceEventAttendeesTableOutput79104803": {
   "Description": "Event Attendees Table (dev)",
   "Value": {
    "Ref": "CoachPortalServiceEventAttendeesTable7A5653ED"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:EventAttendeesTable"
   }
  },
  "ExportsOutputRefCoachPortalServiceCoachPortalAPI18AC990327E8A186": {
   "Value": {
    "Ref": "CoachPortalServiceCoachPortalAPI18AC9903"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:ExportsOutputRefCoachPortalServiceCoachPortalAPI18AC990327E8A186"
   }
  },
  "ExportsOutputRefCoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199446272D2": {
   "Value": {
    "Ref": "CoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199"
   },
   "Export": {
    "Name": "tsa-coach-backend-dev:ExportsOutputRefCoachPortalServiceCoachPortalAPIDeploymentStagedevA1059199446272D2"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}