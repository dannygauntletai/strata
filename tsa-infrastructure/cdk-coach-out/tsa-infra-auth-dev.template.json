{
 "Description": "Passwordless email authentication service (dev)",
 "Resources": {
  "TSAUserPool278A69B2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "family_name",
      "Required": false
     },
     {
      "Mutable": true,
      "Name": "given_name",
      "Required": false
     },
     {
      "AttributeDataType": "String",
      "Name": "coach_id",
      "StringAttributeConstraints": {
       "MaxLength": "256",
       "MinLength": "1"
      }
     },
     {
      "AttributeDataType": "String",
      "Name": "role_type",
      "StringAttributeConstraints": {
       "MaxLength": "100",
       "MinLength": "1"
      }
     },
     {
      "AttributeDataType": "String",
      "Name": "user_role",
      "StringAttributeConstraints": {
       "MaxLength": "100",
       "MinLength": "1"
      }
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "tsa-unified-dev",
    "UserPoolTags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Infrastructure",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Project": "TSA-Unified-Platform"
    },
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/TSAUserPool/Resource"
   }
  },
  "TSAUserPoolClientA59EF2AF": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AccessTokenValidity": 60,
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ClientName": "tsa-unified-client-dev",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_CUSTOM_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "IdTokenValidity": 60,
    "PreventUserExistenceErrors": "ENABLED",
    "ReadAttributes": [
     "email",
     "email_verified",
     "family_name",
     "given_name"
    ],
    "RefreshTokenValidity": 43200,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "TokenValidityUnits": {
     "AccessToken": "minutes",
     "IdToken": "minutes",
     "RefreshToken": "minutes"
    },
    "UserPoolId": {
     "Ref": "TSAUserPool278A69B2"
    },
    "WriteAttributes": [
     "email",
     "family_name",
     "given_name"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/TSAUserPoolClient/Resource"
   }
  },
  "TSAUserPoolDomain2AEF06A6": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": "tsa-unified-dev",
    "UserPoolId": {
     "Ref": "TSAUserPool278A69B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/TSAUserPoolDomain/Resource"
   }
  },
  "MagicLinkHandlerServiceRoleC82569BF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/MagicLinkHandler/ServiceRole/Resource"
   }
  },
  "MagicLinkHandlerServiceRoleDefaultPolicy21C28572": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/invitations-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/invitations-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/parent-invitations-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/parent-invitations-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:DescribeUserPool"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TSAUserPool278A69B2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:secretsmanager:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":secret:tsa-sendgrid-api-key-dev-??????"
         ]
        ]
       }
      },
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/tsa/admin/authorized-emails"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MagicLinkHandlerServiceRoleDefaultPolicy21C28572",
    "Roles": [
     {
      "Ref": "MagicLinkHandlerServiceRoleC82569BF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/MagicLinkHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "MagicLinkHandlerCB08A14B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "c30e79f3679c808e1c9c9907f82898ea0a264578ad04e32a555e78e5f7f77822.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "TSAUserPool278A69B2"
      },
      "CLIENT_ID": {
       "Ref": "TSAUserPoolClientA59EF2AF"
      },
      "MAGIC_LINKS_TABLE": "tsa-magic-links-dev",
      "TSA_INVITATIONS_TABLE": "invitations-dev",
      "PARENT_INVITATIONS_TABLE": "parent-invitations-dev",
      "FRONTEND_URL": "http://localhost:3000",
      "ADMIN_FRONTEND_URL": "http://localhost:3001",
      "LOG_LEVEL": "INFO",
      "SENDGRID_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:secretsmanager:us-east-2:",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:tsa-sendgrid-api-key-dev"
        ]
       ]
      },
      "SENDGRID_FROM_EMAIL": "no-reply@strata.school",
      "SENDGRID_FROM_NAME": "Texas Sports Academy",
      "ADMIN_EMAILS": "admin@sportsacademy.tech,danny.mota@superbuilders.school,malekai.mischke@superbuilders.school"
     }
    },
    "FunctionName": "tsa-magic-link-dev",
    "Handler": "magic_link_handler.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "MagicLinkHandlerServiceRoleC82569BF",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "MagicLinkHandlerServiceRoleDefaultPolicy21C28572",
    "MagicLinkHandlerServiceRoleC82569BF"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/MagicLinkHandler/Resource",
    "aws:asset:path": "asset.c30e79f3679c808e1c9c9907f82898ea0a264578ad04e32a555e78e5f7f77822",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "MagicLinkHandlerMagicLinkAPIGatewayInvoke0BC138C8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MagicLinkHandlerCB08A14B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/MagicLinkHandler/MagicLinkAPIGatewayInvoke"
   }
  },
  "VerifyTokenHandlerServiceRole71C6DBB2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/VerifyTokenHandler/ServiceRole/Resource"
   }
  },
  "VerifyTokenHandlerServiceRoleDefaultPolicyC1811F3E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/invitations-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/invitations-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/parent-invitations-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/parent-invitations-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tsa-magic-links-dev/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:DescribeUserPool"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TSAUserPool278A69B2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:secretsmanager:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":secret:tsa-sendgrid-api-key-dev-??????"
         ]
        ]
       }
      },
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:us-east-2:",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/tsa/admin/authorized-emails"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VerifyTokenHandlerServiceRoleDefaultPolicyC1811F3E",
    "Roles": [
     {
      "Ref": "VerifyTokenHandlerServiceRole71C6DBB2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/VerifyTokenHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "VerifyTokenHandlerE6C4F3C9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "c30e79f3679c808e1c9c9907f82898ea0a264578ad04e32a555e78e5f7f77822.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "TSAUserPool278A69B2"
      },
      "CLIENT_ID": {
       "Ref": "TSAUserPoolClientA59EF2AF"
      },
      "MAGIC_LINKS_TABLE": "tsa-magic-links-dev",
      "TSA_INVITATIONS_TABLE": "invitations-dev",
      "PARENT_INVITATIONS_TABLE": "parent-invitations-dev",
      "FRONTEND_URL": "http://localhost:3000",
      "ADMIN_FRONTEND_URL": "http://localhost:3001",
      "LOG_LEVEL": "INFO",
      "SENDGRID_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:secretsmanager:us-east-2:",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:tsa-sendgrid-api-key-dev"
        ]
       ]
      },
      "SENDGRID_FROM_EMAIL": "no-reply@strata.school",
      "SENDGRID_FROM_NAME": "Texas Sports Academy",
      "ADMIN_EMAILS": "admin@sportsacademy.tech,danny.mota@superbuilders.school,malekai.mischke@superbuilders.school"
     }
    },
    "FunctionName": "tsa-verify-token-dev",
    "Handler": "verify_token_handler.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "VerifyTokenHandlerServiceRole71C6DBB2",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "VerifyTokenHandlerServiceRoleDefaultPolicyC1811F3E",
    "VerifyTokenHandlerServiceRole71C6DBB2"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/VerifyTokenHandler/Resource",
    "aws:asset:path": "asset.c30e79f3679c808e1c9c9907f82898ea0a264578ad04e32a555e78e5f7f77822",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "VerifyTokenHandlerVerifyTokenAPIGatewayInvoke4FE855E1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VerifyTokenHandlerE6C4F3C9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/VerifyTokenHandler/VerifyTokenAPIGatewayInvoke"
   }
  },
  "PasswordlessAPI1E2C09CE": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Unified passwordless email authentication for all TSA user types (coach, parent, admin)",
    "Name": "TSA Unified Passwordless Auth API - dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Resource"
   }
  },
  "PasswordlessAPICloudWatchRole15CF5868": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/CloudWatchRole/Resource"
   }
  },
  "PasswordlessAPIAccount0138C23F": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "PasswordlessAPICloudWatchRole15CF5868",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "PasswordlessAPI1E2C09CE"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Account"
   }
  },
  "PasswordlessAPIDeploymentC1358F82eed0c462b1c9e894f90198991d755c7a": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Unified passwordless email authentication for all TSA user types (coach, parent, admin)",
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "DependsOn": [
    "PasswordlessAPIauthmagiclinkOPTIONS23AC03BB",
    "PasswordlessAPIauthmagiclinkPOST247E173F",
    "PasswordlessAPIauthmagiclink8EBF717B",
    "PasswordlessAPIauthOPTIONS21AE5809",
    "PasswordlessAPIauthE7A553B9",
    "PasswordlessAPIauthverifyOPTIONS395B76F8",
    "PasswordlessAPIauthverifyPOST41068BF4",
    "PasswordlessAPIauthverify1D60B956",
    "PasswordlessAPIhealthGET305E709B",
    "PasswordlessAPIhealthOPTIONSC47C20CF",
    "PasswordlessAPIhealth1EEDB51D",
    "PasswordlessAPIOPTIONS6B7FA350"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Deployment/Resource"
   }
  },
  "PasswordlessAPIDeploymentStagedev02BAB72C": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::Join": [
       "",
       [
        "arn:aws:logs:us-east-2:",
        {
         "Ref": "AWS::AccountId"
        },
        ":log-group:/aws/apigateway/tsa-passwordless-dev:*"
       ]
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "PasswordlessAPIDeploymentC1358F82eed0c462b1c9e894f90198991d755c7a"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    },
    "StageName": "dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Infrastructure"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     }
    ]
   },
   "DependsOn": [
    "PasswordlessAPIAccount0138C23F"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/DeploymentStage.dev/Resource"
   }
  },
  "PasswordlessAPIOPTIONS6B7FA350": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://coach.sportsacademy.tech'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.sportsacademy.tech\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:3001\" || $origin == \"http://localhost:5173\" || $origin == \"http://localhost:8080\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "PasswordlessAPI1E2C09CE",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/OPTIONS/Resource"
   }
  },
  "PasswordlessAPIauthE7A553B9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PasswordlessAPI1E2C09CE",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/Resource"
   }
  },
  "PasswordlessAPIauthOPTIONS21AE5809": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://coach.sportsacademy.tech'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.sportsacademy.tech\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:3001\" || $origin == \"http://localhost:5173\" || $origin == \"http://localhost:8080\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PasswordlessAPIauthE7A553B9"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/OPTIONS/Resource"
   }
  },
  "PasswordlessAPIauthmagiclink8EBF717B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "PasswordlessAPIauthE7A553B9"
    },
    "PathPart": "magic-link",
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/magic-link/Resource"
   }
  },
  "PasswordlessAPIauthmagiclinkOPTIONS23AC03BB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://coach.sportsacademy.tech'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.sportsacademy.tech\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:3001\" || $origin == \"http://localhost:5173\" || $origin == \"http://localhost:8080\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PasswordlessAPIauthmagiclink8EBF717B"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/magic-link/OPTIONS/Resource"
   }
  },
  "PasswordlessAPIauthmagiclinkPOSTApiPermissiontsainfraauthdevPasswordlessAPI9B961520POSTauthmagiclink23CDD283": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MagicLinkHandlerCB08A14B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/",
       {
        "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
       },
       "/POST/auth/magic-link"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/magic-link/POST/ApiPermission.tsainfraauthdevPasswordlessAPI9B961520.POST..auth.magic-link"
   }
  },
  "PasswordlessAPIauthmagiclinkPOSTApiPermissionTesttsainfraauthdevPasswordlessAPI9B961520POSTauthmagiclink91C1053B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MagicLinkHandlerCB08A14B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/test-invoke-stage/POST/auth/magic-link"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/magic-link/POST/ApiPermission.Test.tsainfraauthdevPasswordlessAPI9B961520.POST..auth.magic-link"
   }
  },
  "PasswordlessAPIauthmagiclinkPOST247E173F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MagicLinkHandlerCB08A14B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PasswordlessAPIauthmagiclink8EBF717B"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/magic-link/POST/Resource"
   }
  },
  "PasswordlessAPIauthverify1D60B956": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "PasswordlessAPIauthE7A553B9"
    },
    "PathPart": "verify",
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/verify/Resource"
   }
  },
  "PasswordlessAPIauthverifyOPTIONS395B76F8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://coach.sportsacademy.tech'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.sportsacademy.tech\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:3001\" || $origin == \"http://localhost:5173\" || $origin == \"http://localhost:8080\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PasswordlessAPIauthverify1D60B956"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/verify/OPTIONS/Resource"
   }
  },
  "PasswordlessAPIauthverifyPOSTApiPermissiontsainfraauthdevPasswordlessAPI9B961520POSTauthverifyEAE69499": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VerifyTokenHandlerE6C4F3C9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/",
       {
        "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
       },
       "/POST/auth/verify"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/verify/POST/ApiPermission.tsainfraauthdevPasswordlessAPI9B961520.POST..auth.verify"
   }
  },
  "PasswordlessAPIauthverifyPOSTApiPermissionTesttsainfraauthdevPasswordlessAPI9B961520POSTauthverify9CAF794D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "VerifyTokenHandlerE6C4F3C9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/test-invoke-stage/POST/auth/verify"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/verify/POST/ApiPermission.Test.tsainfraauthdevPasswordlessAPI9B961520.POST..auth.verify"
   }
  },
  "PasswordlessAPIauthverifyPOST41068BF4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "VerifyTokenHandlerE6C4F3C9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PasswordlessAPIauthverify1D60B956"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/auth/verify/POST/Resource"
   }
  },
  "PasswordlessAPIhealth1EEDB51D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PasswordlessAPI1E2C09CE",
      "RootResourceId"
     ]
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/health/Resource"
   }
  },
  "PasswordlessAPIhealthOPTIONSC47C20CF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'https://coach.sportsacademy.tech'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://app.sportsacademy.tech\" || $origin == \"http://localhost:3000\" || $origin == \"http://localhost:3001\" || $origin == \"http://localhost:5173\" || $origin == \"http://localhost:8080\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PasswordlessAPIhealth1EEDB51D"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/health/OPTIONS/Resource"
   }
  },
  "PasswordlessAPIhealthGETApiPermissiontsainfraauthdevPasswordlessAPI9B961520GEThealth36437D4E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MagicLinkHandlerCB08A14B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/",
       {
        "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
       },
       "/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/health/GET/ApiPermission.tsainfraauthdevPasswordlessAPI9B961520.GET..health"
   }
  },
  "PasswordlessAPIhealthGETApiPermissionTesttsainfraauthdevPasswordlessAPI9B961520GEThealth4B70E4D3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MagicLinkHandlerCB08A14B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       "/test-invoke-stage/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/health/GET/ApiPermission.Test.tsainfraauthdevPasswordlessAPI9B961520.GET..health"
   }
  },
  "PasswordlessAPIhealthGET305E709B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MagicLinkHandlerCB08A14B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PasswordlessAPIhealth1EEDB51D"
    },
    "RestApiId": {
     "Ref": "PasswordlessAPI1E2C09CE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAPI/Default/health/GET/Resource"
   }
  },
  "PasswordlessAuthApiUrlParameter027E58CC": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Passwordless Auth API URL for dev environment",
    "Name": "/tsa/dev/api-urls/auth",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Infrastructure",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Project": "TSA-Unified-Platform"
    },
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "https://",
       {
        "Ref": "PasswordlessAPI1E2C09CE"
       },
       ".execute-api.us-east-2.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
       },
       "/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/PasswordlessAuthApiUrlParameter/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Qy26DMBD8ltyNG5JDz3mot6oobc/RYrZ0E9uLbKMIIf69xkDDaWf2NTu7k7vtVuYbePhMVfdMUyn7zwDqLmLq2iuuLQWW/bdHVzBrcfqx/3gBJ01ow7o0ZxZ6ZgNk1w1TZhBVZ8FwVcovKDUewaPQYMoKZP/WWhWI09gaF+gMeR/ZIAiM7C+scSykWLAm1aW+hAbh91fwHoOXhzFELo+tumNIatBQDQEf0MVF6MOhobTrCQ9KcRvNnLHR3JnZ6YrFf9XpgAnEUW6dmsy8Y/jlaizOaKnOIgnHG70Z/+7I1gU4MBjQJQ8LGYbnZLIxasXusemjDU0bBlF0UcG+7GWey9fNzRNlLh5OBuVlin+2fVr87wEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "tsa-infra-auth-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "PasswordlessAPIEndpointDC931873": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PasswordlessAPI1E2C09CE"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
      },
      "/"
     ]
    ]
   }
  },
  "UserPoolId": {
   "Description": "Unified Cognito User Pool ID for all TSA user types (coach, parent, admin)",
   "Value": {
    "Ref": "TSAUserPool278A69B2"
   },
   "Export": {
    "Name": "dev-TSAUserPoolId"
   }
  },
  "UserPoolClientId": {
   "Description": "Unified Cognito User Pool Client ID for passwordless auth",
   "Value": {
    "Ref": "TSAUserPoolClientA59EF2AF"
   },
   "Export": {
    "Name": "dev-TSAUserPoolClientId"
   }
  },
  "UserPoolArn": {
   "Description": "Unified Cognito User Pool ARN",
   "Value": {
    "Fn::GetAtt": [
     "TSAUserPool278A69B2",
     "Arn"
    ]
   },
   "Export": {
    "Name": "dev-TSAUserPoolArn"
   }
  },
  "PasswordlessApiUrl": {
   "Description": "Passwordless Auth API URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PasswordlessAPI1E2C09CE"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "dev-TSAPasswordlessApiUrl"
   }
  },
  "UserPoolDomainUrl": {
   "Description": "Unified Cognito User Pool Domain URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TSAUserPoolDomain2AEF06A6"
      },
      ".auth.us-east-2.amazoncognito.com"
     ]
    ]
   },
   "Export": {
    "Name": "dev-TSAUserPoolDomainUrl"
   }
  },
  "ExportsOutputRefPasswordlessAPI1E2C09CE082AD293": {
   "Value": {
    "Ref": "PasswordlessAPI1E2C09CE"
   },
   "Export": {
    "Name": "tsa-infra-auth-dev:ExportsOutputRefPasswordlessAPI1E2C09CE082AD293"
   }
  },
  "ExportsOutputRefPasswordlessAPIDeploymentStagedev02BAB72C71E0ABD8": {
   "Value": {
    "Ref": "PasswordlessAPIDeploymentStagedev02BAB72C"
   },
   "Export": {
    "Name": "tsa-infra-auth-dev:ExportsOutputRefPasswordlessAPIDeploymentStagedev02BAB72C71E0ABD8"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}