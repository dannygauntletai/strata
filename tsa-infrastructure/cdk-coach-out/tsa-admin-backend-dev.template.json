{
 "Description": "Admin portal backend services - admin-only functionality and shared table owner (dev)",
 "Resources": {
  "AdminPortalServiceAdminSharedLayer7421B720": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "8cd6cdaf70a36639c3e12f62e77c08617a79ca39afb64b578153e71670a614bf.zip"
    },
    "Description": "Shared models and utilities for admin functionality"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminSharedLayer/Resource",
    "aws:asset:path": "asset.8cd6cdaf70a36639c3e12f62e77c08617a79ca39afb64b578153e71670a614bf",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "AdminPortalServiceAuditLogsTableAEF3FCD5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "log_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     },
     {
      "AttributeName": "user_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "user-id-index",
      "KeySchema": [
       {
        "AttributeName": "user_id",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "timestamp",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "log_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "audit-logs-dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "expires_at",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AuditLogsTable/Resource"
   }
  },
  "AdminPortalServiceInvitationsHandlerServiceRoleA09FA6DA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/InvitationsHandler/ServiceRole/Resource"
   }
  },
  "AdminPortalServiceInvitationsHandlerServiceRoleDefaultPolicyF13ACC39": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditLogsTableAEF3FCD5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPortalServiceAuditLogsTableAEF3FCD5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputFnGetAttUnifiedPlatformUserPool95250878ArnF8378A1E"
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminPortalServiceInvitationsHandlerServiceRoleDefaultPolicyF13ACC39",
    "Roles": [
     {
      "Ref": "AdminPortalServiceInvitationsHandlerServiceRoleA09FA6DA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/InvitationsHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AdminPortalServiceInvitationsHandlerF2373BD6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "fbfca6a542a12b5918ca7a2b681e8f77b07e0b9790469060195347499692cef2.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": "users-dev",
      "PROFILES_TABLE": "profiles-dev",
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": "invitations-dev",
      "ENROLLMENTS_TABLE": "enrollments-dev",
      "EVENTS_TABLE": "events-dev",
      "DOCUMENTS_TABLE": "documents-dev",
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "TSA_USERS_TABLE": "users-dev",
      "TSA_PROFILES_TABLE": "profiles-dev",
      "TSA_INVITATIONS_TABLE": "invitations-dev",
      "TSA_ENROLLMENTS_TABLE": "enrollments-dev",
      "TSA_EVENTS_TABLE": "events-dev",
      "TSA_DOCUMENTS_TABLE": "documents-dev",
      "TSA_AUDIT_LOGS_TABLE": {
       "Ref": "AdminPortalServiceAuditLogsTableAEF3FCD5"
      },
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "FROM_EMAIL": "no-reply@sportsacademy.tech",
      "FRONTEND_URL": "http://localhost:3000",
      "ADMIN_FRONTEND_URL": "http://localhost:3001",
      "SENDGRID_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:secretsmanager:us-east-2:",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:tsa-sendgrid-api-key-dev"
        ]
       ]
      },
      "SENDGRID_FROM_EMAIL": "no-reply@strata.school",
      "SENDGRID_FROM_NAME": "Texas Sports Academy"
     }
    },
    "FunctionName": "tsa-admin-portal-dev-invitations",
    "Handler": "handler.lambda_handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerServiceRoleA09FA6DA",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "AdminPortalServiceInvitationsHandlerServiceRoleDefaultPolicyF13ACC39",
    "AdminPortalServiceInvitationsHandlerServiceRoleA09FA6DA"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/InvitationsHandler/Resource",
    "aws:asset:path": "asset.fbfca6a542a12b5918ca7a2b681e8f77b07e0b9790469060195347499692cef2",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AdminPortalServiceInvitationsHandlerInvitationsAPIGatewayInvoke9BE58DE9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/InvitationsHandler/InvitationsAPIGatewayInvoke"
   }
  },
  "AdminPortalServiceAuditHealthHandlerServiceRoleB9A234E5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AuditHealthHandler/ServiceRole/Resource"
   }
  },
  "AdminPortalServiceAuditHealthHandlerServiceRoleDefaultPolicy2767321F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditLogsTableAEF3FCD5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPortalServiceAuditLogsTableAEF3FCD5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputFnGetAttUnifiedPlatformUserPool95250878ArnF8378A1E"
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminPortalServiceAuditHealthHandlerServiceRoleDefaultPolicy2767321F",
    "Roles": [
     {
      "Ref": "AdminPortalServiceAuditHealthHandlerServiceRoleB9A234E5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AuditHealthHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AdminPortalServiceAuditHealthHandler36F9E951": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "2350834255629b57cb5c227aef8ac2528af12653bb4bf606dbe5d440d8bb64d7.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": "users-dev",
      "PROFILES_TABLE": "profiles-dev",
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": "invitations-dev",
      "ENROLLMENTS_TABLE": "enrollments-dev",
      "EVENTS_TABLE": "events-dev",
      "DOCUMENTS_TABLE": "documents-dev",
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "TSA_USERS_TABLE": "users-dev",
      "TSA_PROFILES_TABLE": "profiles-dev",
      "TSA_INVITATIONS_TABLE": "invitations-dev",
      "TSA_ENROLLMENTS_TABLE": "enrollments-dev",
      "TSA_EVENTS_TABLE": "events-dev",
      "TSA_DOCUMENTS_TABLE": "documents-dev",
      "TSA_AUDIT_LOGS_TABLE": {
       "Ref": "AdminPortalServiceAuditLogsTableAEF3FCD5"
      },
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "FROM_EMAIL": "no-reply@sportsacademy.tech",
      "FRONTEND_URL": "http://localhost:3000",
      "ADMIN_FRONTEND_URL": "http://localhost:3001",
      "SENDGRID_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:secretsmanager:us-east-2:",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:tsa-sendgrid-api-key-dev"
        ]
       ]
      },
      "SENDGRID_FROM_EMAIL": "no-reply@strata.school",
      "SENDGRID_FROM_NAME": "Texas Sports Academy"
     }
    },
    "FunctionName": "tsa-admin-portal-dev-audit-health",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "AdminPortalServiceAdminSharedLayer7421B720"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AdminPortalServiceAuditHealthHandlerServiceRoleB9A234E5",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "AdminPortalServiceAuditHealthHandlerServiceRoleDefaultPolicy2767321F",
    "AdminPortalServiceAuditHealthHandlerServiceRoleB9A234E5"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AuditHealthHandler/Resource",
    "aws:asset:path": "asset.2350834255629b57cb5c227aef8ac2528af12653bb4bf606dbe5d440d8bb64d7",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AdminPortalServiceAuditHealthHandlerAuditHealthAPIGatewayInvoke8F624F82": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceAuditHealthHandler36F9E951",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AuditHealthHandler/AuditHealthAPIGatewayInvoke"
   }
  },
  "AdminPortalServiceCoachesHandlerServiceRoleD65FA01B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/CoachesHandler/ServiceRole/Resource"
   }
  },
  "AdminPortalServiceCoachesHandlerServiceRoleDefaultPolicy240FB3C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditLogsTableAEF3FCD5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPortalServiceAuditLogsTableAEF3FCD5",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:*:*:table/documents-dev",
        "arn:aws:dynamodb:*:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:*:*:table/enrollments-dev",
        "arn:aws:dynamodb:*:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:*:*:table/events-dev",
        "arn:aws:dynamodb:*:*:table/events-dev/index/*",
        "arn:aws:dynamodb:*:*:table/invitations-dev",
        "arn:aws:dynamodb:*:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:*:*:table/profiles-dev",
        "arn:aws:dynamodb:*:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:*:*:table/users-dev",
        "arn:aws:dynamodb:*:*:table/users-dev/index/*"
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:secretsmanager:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:tsa-sendgrid-api-key-dev*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputFnGetAttUnifiedPlatformUserPool95250878ArnF8378A1E"
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminPortalServiceCoachesHandlerServiceRoleDefaultPolicy240FB3C0",
    "Roles": [
     {
      "Ref": "AdminPortalServiceCoachesHandlerServiceRoleD65FA01B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/CoachesHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AdminPortalServiceCoachesHandlerD799AD88": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "32ba50b8c79246c56dafd0f5c55314af7302e9e6e714aa2b7e8a305412f73b5e.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": "users-dev",
      "PROFILES_TABLE": "profiles-dev",
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": "invitations-dev",
      "ENROLLMENTS_TABLE": "enrollments-dev",
      "EVENTS_TABLE": "events-dev",
      "DOCUMENTS_TABLE": "documents-dev",
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "TSA_USERS_TABLE": "users-dev",
      "TSA_PROFILES_TABLE": "profiles-dev",
      "TSA_INVITATIONS_TABLE": "invitations-dev",
      "TSA_ENROLLMENTS_TABLE": "enrollments-dev",
      "TSA_EVENTS_TABLE": "events-dev",
      "TSA_DOCUMENTS_TABLE": "documents-dev",
      "TSA_AUDIT_LOGS_TABLE": {
       "Ref": "AdminPortalServiceAuditLogsTableAEF3FCD5"
      },
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "USER_POOL_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPool95250878BAE19627"
      },
      "CLIENT_ID": {
       "Fn::ImportValue": "tsa-infra-security-dev:ExportsOutputRefUnifiedPlatformUserPoolUnifiedPlatformClient1DE78D1A2D28A108"
      },
      "FROM_EMAIL": "no-reply@sportsacademy.tech",
      "FRONTEND_URL": "http://localhost:3000",
      "ADMIN_FRONTEND_URL": "http://localhost:3001",
      "SENDGRID_SECRET_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:aws:secretsmanager:us-east-2:",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:tsa-sendgrid-api-key-dev"
        ]
       ]
      },
      "SENDGRID_FROM_EMAIL": "no-reply@strata.school",
      "SENDGRID_FROM_NAME": "Texas Sports Academy"
     }
    },
    "FunctionName": "tsa-admin-portal-dev-coaches",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "AdminPortalServiceAdminSharedLayer7421B720"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerServiceRoleD65FA01B",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "AdminPortalServiceCoachesHandlerServiceRoleDefaultPolicy240FB3C0",
    "AdminPortalServiceCoachesHandlerServiceRoleD65FA01B"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/CoachesHandler/Resource",
    "aws:asset:path": "asset.32ba50b8c79246c56dafd0f5c55314af7302e9e6e714aa2b7e8a305412f73b5e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AdminPortalServiceCoachesHandlerCoachesAPIGatewayInvokeFD1F5869": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerD799AD88",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/*/*/*/*/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/CoachesHandler/CoachesAPIGatewayInvoke"
   }
  },
  "AdminPortalServiceAdminPortalAPILogs55D27141": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/apigateway/tsa-admin-api-dev",
    "RetentionInDays": 731,
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPILogs/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPI1F0D7369": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Streamlined API for TSA Admin Portal - Coach Invitations and Audit Health (dev)",
    "Name": "TSA Admin API - dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPICloudWatchRole00C537C9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/CloudWatchRole/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIAccount3B44AFEF": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "AdminPortalServiceAdminPortalAPICloudWatchRole00C537C9",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AdminPortalServiceAdminPortalAPI1F0D7369"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Account"
   }
  },
  "AdminPortalServiceAdminPortalAPIDeployment6B96BF24a0dc2997e912d9a854b471d182faec44": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Streamlined API for TSA Admin Portal - Coach Invitations and Audit Health (dev)",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "DependsOn": [
    "AdminPortalServiceAdminPortalAPIadminauditGET039E7954",
    "AdminPortalServiceAdminPortalAPIadminauditOPTIONS9FDB15E1",
    "AdminPortalServiceAdminPortalAPIadminaudit0DA099B4",
    "AdminPortalServiceAdminPortalAPIadmincoachescoachidDELETE531C2061",
    "AdminPortalServiceAdminPortalAPIadmincoachescoachidGETE7C26042",
    "AdminPortalServiceAdminPortalAPIadmincoachescoachidOPTIONS39E81820",
    "AdminPortalServiceAdminPortalAPIadmincoachescoachidPUTB53F9273",
    "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217",
    "AdminPortalServiceAdminPortalAPIadmincoachesGET794DF5D9",
    "AdminPortalServiceAdminPortalAPIadmincoachesOPTIONS6D3182EE",
    "AdminPortalServiceAdminPortalAPIadmincoaches1C1DECC6",
    "AdminPortalServiceAdminPortalAPIadminhealthGETAE5CFF70",
    "AdminPortalServiceAdminPortalAPIadminhealthOPTIONS5A6EAF7F",
    "AdminPortalServiceAdminPortalAPIadminhealth4A6E1284",
    "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidDELETE02C84EA8",
    "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidGET4778D7D5",
    "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidOPTIONS76783E78",
    "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidPUTA1D4E31A",
    "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A",
    "AdminPortalServiceAdminPortalAPIadmininvitationsGET48CDA426",
    "AdminPortalServiceAdminPortalAPIadmininvitationsOPTIONSECA4676D",
    "AdminPortalServiceAdminPortalAPIadmininvitationsPOST88525E8E",
    "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3",
    "AdminPortalServiceAdminPortalAPIadminOPTIONS4CBF3089",
    "AdminPortalServiceAdminPortalAPIadmin19D965C4",
    "AdminPortalServiceAdminPortalAPIadminstatusGET8AC22CE3",
    "AdminPortalServiceAdminPortalAPIadminstatusOPTIONS0A6BAD0E",
    "AdminPortalServiceAdminPortalAPIadminstatus4E0212C1",
    "AdminPortalServiceAdminPortalAPIOPTIONSD8089218"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Deployment/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "AdminPortalServiceAdminPortalAPILogs55D27141",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIDeployment6B96BF24a0dc2997e912d9a854b471d182faec44"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    },
    "StageName": "dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Admin"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Admin"
     }
    ]
   },
   "DependsOn": [
    "AdminPortalServiceAdminPortalAPIAccount3B44AFEF"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/DeploymentStage.dev/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIOPTIONSD8089218": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AdminPortalServiceAdminPortalAPI1F0D7369",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmin19D965C4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "AdminPortalServiceAdminPortalAPI1F0D7369",
      "RootResourceId"
     ]
    },
    "PathPart": "admin",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminOPTIONS4CBF3089": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "PathPart": "invitations",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsOPTIONSECA4676D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadmininvitationsFC645893": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.invitations"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsGET48CDA426": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceInvitationsHandlerF2373BD6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsPOSTApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88POSTadmininvitationsE9E81184": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/POST/admin/invitations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/POST/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.POST..admin.invitations"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsPOST88525E8E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceInvitationsHandlerF2373BD6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/POST/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitations84D059F3"
    },
    "PathPart": "{invitation_id}",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidOPTIONS76783E78": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadmininvitationsinvitationidA50B8456": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.invitations.{invitation_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidGET4778D7D5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceInvitationsHandlerF2373BD6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidPUTApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88PUTadmininvitationsinvitationid629A0DAF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/PUT/admin/invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/PUT/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.PUT..admin.invitations.{invitation_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidPUTA1D4E31A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceInvitationsHandlerF2373BD6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/PUT/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidDELETEApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88DELETEadmininvitationsinvitationid9F105A8E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceInvitationsHandlerF2373BD6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/DELETE/admin/invitations/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/DELETE/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.DELETE..admin.invitations.{invitation_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationidDELETE02C84EA8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceInvitationsHandlerF2373BD6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmininvitationsinvitationid87410D8A"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/invitations/{invitation_id}/DELETE/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoaches1C1DECC6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "PathPart": "coaches",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachesOPTIONS6D3182EE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoaches1C1DECC6"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachesGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadmincoaches93581736": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerD799AD88",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/coaches"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.coaches"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachesGET794DF5D9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceCoachesHandlerD799AD88",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoaches1C1DECC6"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoaches1C1DECC6"
    },
    "PathPart": "{coach_id}",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidOPTIONS39E81820": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadmincoachescoachidAD6D5113": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerD799AD88",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/coaches/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.coaches.{coach_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidGETE7C26042": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceCoachesHandlerD799AD88",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidPUTApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88PUTadmincoachescoachid81B03577": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerD799AD88",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/PUT/admin/coaches/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/PUT/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.PUT..admin.coaches.{coach_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidPUTB53F9273": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceCoachesHandlerD799AD88",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/PUT/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidDELETEApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88DELETEadmincoachescoachid65EE0E89": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceCoachesHandlerD799AD88",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/DELETE/admin/coaches/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/DELETE/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.DELETE..admin.coaches.{coach_id}"
   }
  },
  "AdminPortalServiceAdminPortalAPIadmincoachescoachidDELETE531C2061": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceCoachesHandlerD799AD88",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmincoachescoachid72F08217"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/coaches/{coach_id}/DELETE/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminhealth4A6E1284": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/health/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminhealthOPTIONS5A6EAF7F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminhealth4A6E1284"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/health/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminhealthGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadminhealthEB6E52DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceAuditHealthHandler36F9E951",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/health/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.health"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminhealthGETAE5CFF70": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditHealthHandler36F9E951",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminhealth4A6E1284"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/health/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminaudit0DA099B4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "PathPart": "audit",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/audit/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminauditOPTIONS9FDB15E1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminaudit0DA099B4"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/audit/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminauditGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadminaudit03EEEA26": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceAuditHealthHandler36F9E951",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/audit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/audit/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.audit"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminauditGET039E7954": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditHealthHandler36F9E951",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminaudit0DA099B4"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/audit/GET/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminstatus4E0212C1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadmin19D965C4"
    },
    "PathPart": "status",
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/status/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminstatusOPTIONS0A6BAD0E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept,Accept-Language,Cache-Control,x-user-email,x-user-id,x-user-role,x-session-id,x-auth-token,x-api-version,x-client-version,x-request-id,x-correlation-id'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3001'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3001\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminstatus4E0212C1"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/status/OPTIONS/Resource"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminstatusGETApiPermissiontsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88GETadminstatusCCE8D50C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminPortalServiceAuditHealthHandler36F9E951",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/GET/admin/status"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/status/GET/ApiPermission.tsaadminbackenddevAdminPortalServiceAdminPortalAPI8B3BBB88.GET..admin.status"
   }
  },
  "AdminPortalServiceAdminPortalAPIadminstatusGET8AC22CE3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AdminPortalServiceAuditHealthHandler36F9E951",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "AdminPortalServiceAdminPortalAPIadminstatus4E0212C1"
    },
    "RestApiId": {
     "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminPortalAPI/Default/admin/status/GET/Resource"
   }
  },
  "AdminPortalServiceAdminAPIUrlParameter5D5F297D": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Admin API URL for dev environment",
    "Name": "/tsa/dev/api-urls/admin",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "https://",
       {
        "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
       },
       ".execute-api.us-east-2.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
       },
       "/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/AdminAPIUrlParameter/Resource"
   }
  },
  "AdminPortalServiceUsersTableParameterFC1C2981": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Users table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/users",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "users-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/UsersTableParameter/Resource"
   }
  },
  "AdminPortalServiceProfilesTableParameterEEFC1291": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Profiles table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/profiles",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "profiles-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/ProfilesTableParameter/Resource"
   }
  },
  "AdminPortalServiceInvitationsTableParameter70FB53C8": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Invitations table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/invitations",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "invitations-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/InvitationsTableParameter/Resource"
   }
  },
  "AdminPortalServiceEnrollmentsTableParameter9F755194": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Enrollments table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/enrollments",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "enrollments-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/EnrollmentsTableParameter/Resource"
   }
  },
  "AdminPortalServiceEventsTableParameter18CA51F7": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Events table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/events",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "events-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/EventsTableParameter/Resource"
   }
  },
  "AdminPortalServiceDocumentsTableParameter2A67013C": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Auto-managed Documents table name for dev environment (from data layer)",
    "Name": "/tsa-shared/dev/table-names/documents",
    "Tags": {
     "CostCenter": "Engineering",
     "Environment": "dev",
     "Layer": "Application",
     "ManagedBy": "CDK",
     "Owner": "TSA-Engineering",
     "Portal": "Admin",
     "Project": "TSA-Unified-Platform",
     "UserType": "Admin"
    },
    "Type": "String",
    "Value": "documents-dev"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/AdminPortalService/DocumentsTableParameter/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQTU/DMAyGf8vuaVi3A+cOBBcQ1UBcJzc1XWiTVPnQFFX577hpJ7aTH3++tnd8t93ycgMXV4i2LwbZ8OnTg+gZhU7TAKppgU9vENF+o3XSaPb0o+/8l6CFXxO3XKNV0s0libn9CZxD73g1G/L5IYge/QEcsjZqUKYl7S9oBpybMyQmQfHpaJZYtrUZpIh5fqbEBtM5WtF0r9aEMa+3cmIwyg48XiDSGHS+GmWe9I+VECZoz55xHExUSEjRG4/e0WX5BajVBCswL/6O/mzaObnSNbuKZKbrnZrfaqXuarCg0KPNF1ydlFj+yyxBRXdjPoIfg0+sjqSgH/a8LPnj5tdJWVhaXCrkx8X+AZlf4/7OAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-admin-backend-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AdminPortalServiceAdminPortalAPIEndpointCD77C31D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
      },
      "/"
     ]
    ]
   }
  },
  "AdminAPIUrlDev": {
   "Description": "Admin Portal API URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "dev-AdminAPIUrl"
   }
  },
  "AdminPortalServiceInvitationsTableName9FB36F06": {
   "Description": "Coach Invitations DynamoDB Table Name (from data layer)",
   "Value": "invitations-dev",
   "Export": {
    "Name": "dev-InvitationsTableName"
   }
  },
  "AdminPortalServiceUsersTableName0E71FFC7": {
   "Description": "Users DynamoDB Table Name (from data layer)",
   "Value": "users-dev",
   "Export": {
    "Name": "dev-UsersTableName"
   }
  },
  "AdminPortalServiceEventsTableNameBD073FC1": {
   "Description": "Events DynamoDB Table Name (from data layer)",
   "Value": "events-dev",
   "Export": {
    "Name": "dev-EventsTableName"
   }
  },
  "AdminPortalServiceEnrollmentsTableNameA3B14A1F": {
   "Description": "Enrollments DynamoDB Table Name (from data layer)",
   "Value": "enrollments-dev",
   "Export": {
    "Name": "dev-EnrollmentsTableName"
   }
  },
  "AdminPortalServiceDocumentsTableNameBA7A158F": {
   "Description": "Documents DynamoDB Table Name (from data layer)",
   "Value": "documents-dev",
   "Export": {
    "Name": "dev-DocumentsTableName"
   }
  },
  "AdminPortalServiceAuditLogsTableName87D3E7E8": {
   "Description": "Audit Logs DynamoDB Table Name (admin-specific)",
   "Value": {
    "Ref": "AdminPortalServiceAuditLogsTableAEF3FCD5"
   },
   "Export": {
    "Name": "dev-AuditLogsTableName"
   }
  },
  "ExportsOutputRefAdminPortalServiceAdminPortalAPI1F0D73691D72847A": {
   "Value": {
    "Ref": "AdminPortalServiceAdminPortalAPI1F0D7369"
   },
   "Export": {
    "Name": "tsa-admin-backend-dev:ExportsOutputRefAdminPortalServiceAdminPortalAPI1F0D73691D72847A"
   }
  },
  "ExportsOutputRefAdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D2E5B0924": {
   "Value": {
    "Ref": "AdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D"
   },
   "Export": {
    "Name": "tsa-admin-backend-dev:ExportsOutputRefAdminPortalServiceAdminPortalAPIDeploymentStagedev5A0D556D2E5B0924"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}