{
 "Description": "Parent portal backend services - parent-only functionality (dev)",
 "Resources": {
  "ParentPortalServiceParentSharedLayer8790EE8B": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "8c785a1cd01b47b02b9242713d4e6d353777ff1a0291fe1c1604293b1a4820ce.zip"
    },
    "Description": "Shared models and utilities for parent portal functionality"
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentSharedLayer/Resource",
    "aws:asset:path": "asset.8c785a1cd01b47b02b9242713d4e6d353777ff1a0291fe1c1604293b1a4820ce",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "ParentPortalServiceParentEnrollmentHandlerServiceRoleEC7A8C8A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentEnrollmentHandler/ServiceRole/Resource"
   }
  },
  "ParentPortalServiceParentEnrollmentHandlerServiceRoleDefaultPolicy3EA07DD7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-2:*:table/analytics-events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/analytics-events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/audit-logs-dev",
        "arn:aws:dynamodb:us-east-2:*:table/audit-logs-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/background-checks-dev",
        "arn:aws:dynamodb:us-east-2:*:table/background-checks-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/bootcamp-progress-dev",
        "arn:aws:dynamodb:us-east-2:*:table/bootcamp-progress-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/coach-onboarding-sessions-dev",
        "arn:aws:dynamodb:us-east-2:*:table/coach-onboarding-sessions-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/documents-dev",
        "arn:aws:dynamodb:us-east-2:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/enrollments-dev",
        "arn:aws:dynamodb:us-east-2:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/event-attendees-dev",
        "arn:aws:dynamodb:us-east-2:*:table/event-attendees-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/event-registrations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/event-registrations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/eventbrite-config-dev",
        "arn:aws:dynamodb:us-east-2:*:table/eventbrite-config-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/invitations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/legal-requirements-dev",
        "arn:aws:dynamodb:us-east-2:*:table/legal-requirements-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/messages-dev",
        "arn:aws:dynamodb:us-east-2:*:table/messages-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/notifications-dev",
        "arn:aws:dynamodb:us-east-2:*:table/notifications-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/organizations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/organizations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/parent-invitations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/parent-invitations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/profiles-dev",
        "arn:aws:dynamodb:us-east-2:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/scheduling-dev",
        "arn:aws:dynamodb:us-east-2:*:table/scheduling-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/sessions-dev",
        "arn:aws:dynamodb:us-east-2:*:table/sessions-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/timeline-events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/timeline-events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/tsa-magic-links-dev",
        "arn:aws:dynamodb:us-east-2:*:table/tsa-magic-links-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/users-dev",
        "arn:aws:dynamodb:us-east-2:*:table/users-dev/index/*",
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/documents-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/documents-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/enrollments-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/enrollments-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/scheduling-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/scheduling-dev/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ParentPortalServiceParentEnrollmentHandlerServiceRoleDefaultPolicy3EA07DD7",
    "Roles": [
     {
      "Ref": "ParentPortalServiceParentEnrollmentHandlerServiceRoleEC7A8C8A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentEnrollmentHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ParentPortalServiceParentEnrollmentHandler50058A41": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "069d9020db7bc078102eafaf7fde8f58c87f7705d1e594a5784245fbe46ba179.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": "users-dev",
      "PROFILES_TABLE": "profiles-dev",
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": "invitations-dev",
      "ENROLLMENTS_TABLE": "enrollments-dev",
      "EVENTS_TABLE": "events-dev",
      "DOCUMENTS_TABLE": "documents-dev",
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "PARENT_INVITATIONS_TABLE": "parent-invitations-dev",
      "SCHEDULING_TABLE": "scheduling-dev",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-parent-enrollment-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "ParentPortalServiceParentSharedLayer8790EE8B"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandlerServiceRoleEC7A8C8A",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "ParentPortalServiceParentEnrollmentHandlerServiceRoleDefaultPolicy3EA07DD7",
    "ParentPortalServiceParentEnrollmentHandlerServiceRoleEC7A8C8A"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentEnrollmentHandler/Resource",
    "aws:asset:path": "asset.069d9020db7bc078102eafaf7fde8f58c87f7705d1e594a5784245fbe46ba179",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ParentPortalServiceAdmissionsValidateHandlerServiceRole2050A067": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/AdmissionsValidateHandler/ServiceRole/Resource"
   }
  },
  "ParentPortalServiceAdmissionsValidateHandlerServiceRoleDefaultPolicyFB1E6D89": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-2:*:table/analytics-events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/analytics-events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/audit-logs-dev",
        "arn:aws:dynamodb:us-east-2:*:table/audit-logs-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/background-checks-dev",
        "arn:aws:dynamodb:us-east-2:*:table/background-checks-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/bootcamp-progress-dev",
        "arn:aws:dynamodb:us-east-2:*:table/bootcamp-progress-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/coach-onboarding-sessions-dev",
        "arn:aws:dynamodb:us-east-2:*:table/coach-onboarding-sessions-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/documents-dev",
        "arn:aws:dynamodb:us-east-2:*:table/documents-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/enrollments-dev",
        "arn:aws:dynamodb:us-east-2:*:table/enrollments-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/event-attendees-dev",
        "arn:aws:dynamodb:us-east-2:*:table/event-attendees-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/event-registrations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/event-registrations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/eventbrite-config-dev",
        "arn:aws:dynamodb:us-east-2:*:table/eventbrite-config-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/invitations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/invitations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/legal-requirements-dev",
        "arn:aws:dynamodb:us-east-2:*:table/legal-requirements-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/messages-dev",
        "arn:aws:dynamodb:us-east-2:*:table/messages-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/notifications-dev",
        "arn:aws:dynamodb:us-east-2:*:table/notifications-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/organizations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/organizations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/parent-invitations-dev",
        "arn:aws:dynamodb:us-east-2:*:table/parent-invitations-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/profiles-dev",
        "arn:aws:dynamodb:us-east-2:*:table/profiles-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/scheduling-dev",
        "arn:aws:dynamodb:us-east-2:*:table/scheduling-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/sessions-dev",
        "arn:aws:dynamodb:us-east-2:*:table/sessions-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/timeline-events-dev",
        "arn:aws:dynamodb:us-east-2:*:table/timeline-events-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/tsa-magic-links-dev",
        "arn:aws:dynamodb:us-east-2:*:table/tsa-magic-links-dev/index/*",
        "arn:aws:dynamodb:us-east-2:*:table/users-dev",
        "arn:aws:dynamodb:us-east-2:*:table/users-dev/index/*",
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/documents-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/documents-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/enrollments-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/enrollments-dev/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/scheduling-dev"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:us-east-2:",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/scheduling-dev/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ParentPortalServiceAdmissionsValidateHandlerServiceRoleDefaultPolicyFB1E6D89",
    "Roles": [
     {
      "Ref": "ParentPortalServiceAdmissionsValidateHandlerServiceRole2050A067"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/AdmissionsValidateHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ParentPortalServiceAdmissionsValidateHandlerA5754542": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
     },
     "S3Key": "a2e077b73698a471aa09719c358f0084d2bb92679082bfa3703cee64cf298a7b.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "LOG_LEVEL": "INFO",
      "USERS_TABLE": "users-dev",
      "PROFILES_TABLE": "profiles-dev",
      "ORGANIZATIONS_TABLE": "organizations-dev",
      "INVITATIONS_TABLE": "invitations-dev",
      "ENROLLMENTS_TABLE": "enrollments-dev",
      "EVENTS_TABLE": "events-dev",
      "DOCUMENTS_TABLE": "documents-dev",
      "AUDIT_LOGS_TABLE": "audit-logs-dev",
      "PARENT_INVITATIONS_TABLE": "parent-invitations-dev",
      "SCHEDULING_TABLE": "scheduling-dev",
      "DB_HOST": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputFnGetAttUnifiedPlatformDatabase0624511CEndpointAddressA290300B"
      },
      "DB_NAME": "unified_platform",
      "DB_SECRET_ARN": {
       "Fn::ImportValue": "tsa-infra-data-dev:ExportsOutputRefDatabaseSecretAttachment9A63A3D478416D8E"
      },
      "DB_PORT": "5432",
      "FRONTEND_URL": "http://localhost:3000",
      "FROM_EMAIL": "no-reply@sportsacademy.tech"
     }
    },
    "FunctionName": "tsa-admissions-validate-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "ParentPortalServiceParentSharedLayer8790EE8B"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ParentPortalServiceAdmissionsValidateHandlerServiceRole2050A067",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputFnGetAttUnifiedPlatformLambdaSGE96E9657GroupIdA152AC5B"
      }
     ],
     "SubnetIds": [
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet1Subnet18780D40CFF341EE"
      },
      {
       "Fn::ImportValue": "tsa-infra-networking-dev:ExportsOutputRefTsaUnifiedPlatformVPCPrivateSubnet2SubnetC42C6742A007B8D1"
      }
     ]
    }
   },
   "DependsOn": [
    "ParentPortalServiceAdmissionsValidateHandlerServiceRoleDefaultPolicyFB1E6D89",
    "ParentPortalServiceAdmissionsValidateHandlerServiceRole2050A067"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/AdmissionsValidateHandler/Resource",
    "aws:asset:path": "asset.a2e077b73698a471aa09719c358f0084d2bb92679082bfa3703cee64cf298a7b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ParentPortalServiceParentPortalAPILogs5991E1BC": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/apigateway/tsa-parent-api-dev",
    "RetentionInDays": 731,
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPILogs/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPI6FFCC175": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for TSA Parent Portal and Student Enrollment (dev)",
    "Name": "TSA Parent API - dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPICloudWatchRoleE9AF82F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/CloudWatchRole/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIAccountD78125BC": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentPortalAPICloudWatchRoleE9AF82F8",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ParentPortalServiceParentPortalAPI6FFCC175"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Account"
   }
  },
  "ParentPortalServiceParentPortalAPIDeploymentD86EC96821976d7383e9aff33e33443f5ddd6913": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for TSA Parent Portal and Student Enrollment (dev)",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "DependsOn": [
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidDELETEFA53553A",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidGETA1AEBFD7",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidOPTIONS1455C100",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentid13D3103D",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsGETDCE16E6D",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsOPTIONSABFB832B",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsPOSTE7B2E167",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidGETAF96DDF2",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidOPTIONSAB3340F4",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidPUT68F3E7FD",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsOPTIONS79A3203D",
    "ParentPortalServiceParentPortalAPIadmissionsenrollmentsPOST8DC8E3C1",
    "ParentPortalServiceParentPortalAPIadmissionsenrollments492EB933",
    "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenGETECD02852",
    "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenOPTIONS47EFFAFE",
    "ParentPortalServiceParentPortalAPIadmissionsinvitationtoken3426E083",
    "ParentPortalServiceParentPortalAPIadmissionsinvitationOPTIONS6C93E72D",
    "ParentPortalServiceParentPortalAPIadmissionsinvitation7D276BCA",
    "ParentPortalServiceParentPortalAPIadmissionsOPTIONS00FA1929",
    "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D",
    "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationOPTIONS9C1092EF",
    "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationPOST84C844D2",
    "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitation91405F13",
    "ParentPortalServiceParentPortalAPIhealthGETEB143792",
    "ParentPortalServiceParentPortalAPIhealthOPTIONSD1772C78",
    "ParentPortalServiceParentPortalAPIhealthD404157B",
    "ParentPortalServiceParentPortalAPIOPTIONS4CF89C56"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Deployment/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "ParentPortalServiceParentPortalAPILogs5991E1BC",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "ParentPortalServiceParentPortalAPIDeploymentD86EC96821976d7383e9aff33e33443f5ddd6913"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    },
    "StageName": "dev",
    "Tags": [
     {
      "Key": "CostCenter",
      "Value": "Engineering"
     },
     {
      "Key": "Environment",
      "Value": "dev"
     },
     {
      "Key": "Layer",
      "Value": "Application"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     },
     {
      "Key": "Owner",
      "Value": "TSA-Engineering"
     },
     {
      "Key": "Portal",
      "Value": "Parent"
     },
     {
      "Key": "Project",
      "Value": "TSA-Unified-Platform"
     },
     {
      "Key": "UserType",
      "Value": "Parent"
     }
    ]
   },
   "DependsOn": [
    "ParentPortalServiceParentPortalAPIAccountD78125BC"
   ],
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/DeploymentStage.dev/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIOPTIONS4CF89C56": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentPortalAPI6FFCC175",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentPortalAPI6FFCC175",
      "RootResourceId"
     ]
    },
    "PathPart": "admissions",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsOPTIONS00FA1929": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitation91405F13": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D"
    },
    "PathPart": "validate-invitation",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/validate-invitation/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationOPTIONS9C1092EF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitation91405F13"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/validate-invitation/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationPOSTApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsvalidateinvitation46C97C04": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceAdmissionsValidateHandlerA5754542",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/POST/admissions/validate-invitation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/validate-invitation/POST/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.validate-invitation"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationPOSTApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsvalidateinvitationB62FB89D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceAdmissionsValidateHandlerA5754542",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/POST/admissions/validate-invitation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/validate-invitation/POST/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.validate-invitation"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitationPOST84C844D2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceAdmissionsValidateHandlerA5754542",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsvalidateinvitation91405F13"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/validate-invitation/POST/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitation7D276BCA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D"
    },
    "PathPart": "invitation",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationOPTIONS6C93E72D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsinvitation7D276BCA"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationtoken3426E083": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsinvitation7D276BCA"
    },
    "PathPart": "{token}",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/{token}/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenOPTIONS47EFFAFE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsinvitationtoken3426E083"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/{token}/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenGETApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsinvitationtoken31825E78": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceAdmissionsValidateHandlerA5754542",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/GET/admissions/invitation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/{token}/GET/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.invitation.{token}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenGETApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsinvitationtoken03E211DB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceAdmissionsValidateHandlerA5754542",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/GET/admissions/invitation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/{token}/GET/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.invitation.{token}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsinvitationtokenGETECD02852": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceAdmissionsValidateHandlerA5754542",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsinvitationtoken3426E083"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/invitation/{token}/GET/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollments492EB933": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsDEB4BE4D"
    },
    "PathPart": "enrollments",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsOPTIONS79A3203D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollments492EB933"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsPOSTApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsenrollmentsB6A1128C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/POST/admissions/enrollments"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/POST/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.enrollments"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsPOSTApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsenrollmentsA832E7F3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/POST/admissions/enrollments"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/POST/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.enrollments"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsPOST8DC8E3C1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollments492EB933"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/POST/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollments492EB933"
    },
    "PathPart": "{enrollment_id}",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidOPTIONSAB3340F4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidGETApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentid2B9C1717": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/GET/admissions/enrollments/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/GET/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidGETApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentid1E62DB70": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/GET/admissions/enrollments/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/GET/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidGETAF96DDF2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/GET/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidPUTApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408PUTadmissionsenrollmentsenrollmentid17A75D44": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/PUT/admissions/enrollments/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/PUT/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.PUT..admissions.enrollments.{enrollment_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidPUTApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408PUTadmissionsenrollmentsenrollmentidDF5E7CD7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/PUT/admissions/enrollments/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/PUT/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.PUT..admissions.enrollments.{enrollment_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentidPUT68F3E7FD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/PUT/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentid679CDBA1"
    },
    "PathPart": "documents",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsOPTIONSABFB832B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsGETApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentiddocuments3F800D5E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/GET/admissions/enrollments/*/documents"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/GET/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}.documents"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsGETApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentiddocuments0B45D388": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/GET/admissions/enrollments/*/documents"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/GET/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}.documents"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsGETDCE16E6D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/GET/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsPOSTApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsenrollmentsenrollmentiddocuments4D91D4F3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/POST/admissions/enrollments/*/documents"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/POST/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.enrollments.{enrollment_id}.documents"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsPOSTApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408POSTadmissionsenrollmentsenrollmentiddocuments986D0884": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/POST/admissions/enrollments/*/documents"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/POST/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.POST..admissions.enrollments.{enrollment_id}.documents"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsPOSTE7B2E167": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/POST/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentid13D3103D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocuments3FA243BC"
    },
    "PathPart": "{document_id}",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidOPTIONS1455C100": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentid13D3103D"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidGETApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentiddocumentsdocumentidF58335C5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/GET/admissions/enrollments/*/documents/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/GET/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}.documents.{document_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidGETApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GETadmissionsenrollmentsenrollmentiddocumentsdocumentid81A7E60E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/GET/admissions/enrollments/*/documents/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/GET/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..admissions.enrollments.{enrollment_id}.documents.{document_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidGETA1AEBFD7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentid13D3103D"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/GET/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidDELETEApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408DELETEadmissionsenrollmentsenrollmentiddocumentsdocumentid86ED651A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/DELETE/admissions/enrollments/*/documents/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/DELETE/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.DELETE..admissions.enrollments.{enrollment_id}.documents.{document_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidDELETEApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408DELETEadmissionsenrollmentsenrollmentiddocumentsdocumentidB5C05B8A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/DELETE/admissions/enrollments/*/documents/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/DELETE/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.DELETE..admissions.enrollments.{enrollment_id}.documents.{document_id}"
   }
  },
  "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentidDELETEFA53553A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIadmissionsenrollmentsenrollmentiddocumentsdocumentid13D3103D"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/admissions/enrollments/{enrollment_id}/documents/{document_id}/DELETE/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIhealthD404157B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentPortalAPI6FFCC175",
      "RootResourceId"
     ]
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/health/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIhealthOPTIONSD1772C78": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With,Accept'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:3000'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'600'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://localhost:3000\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIhealthD404157B"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/health/OPTIONS/Resource"
   }
  },
  "ParentPortalServiceParentPortalAPIhealthGETApiPermissiontsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GEThealth24F3DABF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/",
       {
        "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
       },
       "/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/health/GET/ApiPermission.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..health"
   }
  },
  "ParentPortalServiceParentPortalAPIhealthGETApiPermissionTesttsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408GEThealthD57035A3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParentPortalServiceParentEnrollmentHandler50058A41",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
       },
       "/test-invoke-stage/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/health/GET/ApiPermission.Test.tsaparentbackenddevParentPortalServiceParentPortalAPI0FAAF408.GET..health"
   }
  },
  "ParentPortalServiceParentPortalAPIhealthGETEB143792": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParentPortalServiceParentEnrollmentHandler50058A41",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ParentPortalServiceParentPortalAPIhealthD404157B"
    },
    "RestApiId": {
     "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
    }
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/ParentPortalService/ParentPortalAPI/Default/health/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPTW/CMAyGfwv3NKNw4Fw2bZdNVEzaFZnUK17TpIoToarKf18aOg1Ofvzx2q83crNey3IFVy5U0xWaznL69KA6kUqnSUN/bkBO7zCi+0LHZI14/jYP+Wswyi+Ne67R9cTzSBS8PQEzepbVHFIu90F16PfAKAh6OR2txlmWY201qTFvyRSFti0nI7Z9czYM2cTCUcBALXi8wpjWIPtqoLzpHyulbDBevOCg7dhjwlS9y9LTbT5/gyS1wSnM9j7QX2wzNxf66y5HMsco8muznkz7MHMIfgg+inpMcvO0lWUpd6sfJipcckU9yuMt/gK/6PxykQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "tsa-parent-backend-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ParentPortalServiceParentPortalAPIEndpoint029CD6C4": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
      },
      "/"
     ]
    ]
   }
  },
  "ParentAPIUrlDev": {
   "Description": "Parent Portal API Gateway URL (dev)",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ParentPortalServiceParentPortalAPI6FFCC175"
      },
      ".execute-api.us-east-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ParentPortalServiceParentPortalAPIDeploymentStagedevCF5452D1"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "tsa-parent-backend-dev:ParentPortalAPIUrl"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}